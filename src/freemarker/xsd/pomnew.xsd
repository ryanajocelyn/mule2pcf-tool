<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/pomnew" xmlns:tns="http://www.example.org/pomnew" elementFormDefault="qualified">

<xs:complexType name="ReportPlugin">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The <code>&lt;plugin&gt;</code> element contains informations required for a report plugin. </xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="groupId" minOccurs="0" default="org.apache.maven.plugins">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The group ID of the reporting plugin in the repository.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="artifactId" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The artifact ID of the reporting plugin in the repository.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="version" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The version of the reporting plugin to be used.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="reportSets" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> Multiple specifications of a set of reports, each having (possibly) different configuration. This is the reporting parallel to an <code>execution</code> in the build. </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="ReportSet" name="reportSet" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="xs:string" name="inherited" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> Whether any configuration should be propagated to child POMs. Note: While the type of this field is <code>String</code> for technical reasons, the semantic type is actually <code>Boolean</code>. Default value is <code>true</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="configuration" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">0.0.0+</xs:documentation>

<xs:documentation source="description"> <p>The configuration as DOM object.</p> <p>By default, every element content is trimmed, but starting with Maven 3.1.0, you can add <code>xml:space="preserve"</code> to elements you want to preserve whitespace.</p> <p>You can control how child POMs inherit configuration from parent POMs by adding <code>combine.children</code> or <code>combine.self</code> attributes to the children of the configuration element:</p> <ul> <li><code>combine.children</code>: available values are <code>merge</code> (default) and <code>append</code>,</li> <li><code>combine.self</code>: available values are <code>merge</code> (default) and <code>override</code>.</li> </ul> <p>See <a href="http://maven.apache.org/pom.html#Plugins">POM Reference documentation</a> and <a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html">Xpp3DomUtils</a> for more information.</p> </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="ReportSet">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Represents a set of reports and configuration to be used to generate them.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="id" minOccurs="0" default="default">


<xs:annotation>

<xs:documentation source="version">0.0.0+</xs:documentation>

<xs:documentation source="description">The unique id for this report set, to be used during POM inheritance and profile injection for merging of report sets. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="reports" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The list of reports from this plugin which should be generated from this set.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="xs:string" name="report" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="xs:string" name="inherited" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> Whether any configuration should be propagated to child POMs. Note: While the type of this field is <code>String</code> for technical reasons, the semantic type is actually <code>Boolean</code>. Default value is <code>true</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="configuration" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">0.0.0+</xs:documentation>

<xs:documentation source="description"> <p>The configuration as DOM object.</p> <p>By default, every element content is trimmed, but starting with Maven 3.1.0, you can add <code>xml:space="preserve"</code> to elements you want to preserve whitespace.</p> <p>You can control how child POMs inherit configuration from parent POMs by adding <code>combine.children</code> or <code>combine.self</code> attributes to the children of the configuration element:</p> <ul> <li><code>combine.children</code>: available values are <code>merge</code> (default) and <code>append</code>,</li> <li><code>combine.self</code>: available values are <code>merge</code> (default) and <code>override</code>.</li> </ul> <p>See <a href="http://maven.apache.org/pom.html#Plugins">POM Reference documentation</a> and <a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3DomUtils.html">Xpp3DomUtils</a> for more information.</p> </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="Activation">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The conditions within the build runtime environment which will trigger the automatic inclusion of the build profile. Multiple conditions can be defined, which must be all satisfied to activate the profile. </xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:boolean" name="activeByDefault" minOccurs="0" default="false">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">If set to true, this profile will be active unless another profile in this pom is activated using the command line -P option or by one of that profile's activators.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="jdk" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> Specifies that this profile will be activated when a matching JDK is detected. For example, <code>1.4</code> only activates on JDKs versioned 1.4, while <code>!1.4</code> matches any JDK that is not version 1.4. Ranges are supported too: <code>[1.5,)</code> activates when the JDK is 1.5 minimum. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="ActivationOS" name="os" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Specifies that this profile will be activated when matching operating system attributes are detected.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="ActivationProperty" name="property" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Specifies that this profile will be activated when this system property is specified.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="ActivationFile" name="file" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Specifies that this profile will be activated based on existence of a file.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="ActivationProperty">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">This is the property specification used to activate a profile. If the value field is empty, then the existence of the named property will activate the profile, otherwise it does a case-sensitive match against the property value as well.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="name" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The name of the property to be used to activate a profile.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="value" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The value of the property required to activate a profile.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="ActivationOS">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">This is an activator which will detect an operating system's attributes in order to activate its profile.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="name" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The name of the operating system to be used to activate the profile. This must be an exact match of the <code>${os.name}</code> Java property, such as <code>Windows XP</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="family" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The general family of the OS to be used to activate the profile, such as <code>windows</code> or <code>unix</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="arch" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The architecture of the operating system to be used to activate the profile.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="version" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The version of the operating system to be used to activate the profile.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="ActivationFile">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">This is the file specification used to activate the profile. The <code>missing</code> value is the location of a file that needs to exist, and if it doesn't, the profile will be activated. On the other hand, <code>exists</code> will test for the existence of the file and if it is there, the profile will be activated.<br/> Variable interpolation for these file specifications is limited to <code>${basedir}</code>, System properties and request properties.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="missing" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The name of the file that must be missing to activate the profile.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="exists" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The name of the file that must exist to activate the profile.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="DependencyManagement">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Section for management of default dependency information for use in a group of POMs.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element name="dependencies" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The dependencies specified here are not used until they are referenced in a POM within the group. This allows the specification of a "standard" version for a particular dependency.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="Dependency" name="dependency" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="Build">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The <code>&lt;build&gt;</code> element contains informations required to build the project. Default values are defined in Super POM. </xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="sourceDirectory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> This element specifies a directory containing the source of the project. The generated build system will compile the sources from this directory when the project is built. The path given is relative to the project descriptor. The default value is <code>src/main/java</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="scriptSourceDirectory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> This element specifies a directory containing the script sources of the project. This directory is meant to be different from the sourceDirectory, in that its contents will be copied to the output directory in most cases (since scripts are interpreted rather than compiled). The default value is <code>src/main/scripts</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="testSourceDirectory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> This element specifies a directory containing the unit test source of the project. The generated build system will compile these directories when the project is being tested. The path given is relative to the project descriptor. The default value is <code>src/test/java</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="outputDirectory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The directory where compiled application classes are placed. The default value is <code>target/classes</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="testOutputDirectory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The directory where compiled test classes are placed. The default value is <code>target/test-classes</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="extensions" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">A set of build extensions to use from this project.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="Extension" name="extension" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="xs:string" name="defaultGoal" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The default goal (or phase in Maven 2) to execute when none is specified for the project. Note that in case of a multi-module build, only the default goal of the top-level project is relevant, i.e. the default goals of child modules are ignored. Since Maven 3, multiple goals/phases can be separated by whitespace.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="resources" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> This element describes all of the classpath resources such as properties files associated with a project. These resources are often included in the final package. The default value is <code>src/main/resources</code>. </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="Resource" name="resource" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element name="testResources" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> This element describes all of the classpath resources such as properties files associated with a project's unit tests. The default value is <code>src/test/resources</code>. </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="Resource" name="testResource" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="xs:string" name="directory" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The directory where all files generated by the build are placed. The default value is <code>target</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="finalName" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description"> The filename (excluding the extension, and with no path information) that the produced artifact will be called. The default value is <code>${artifactId}-${version}</code>. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="filters" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The list of filter properties files that are used when filtering is enabled.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="xs:string" name="filter" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="PluginManagement" name="pluginManagement" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Default plugin information to be made available for reference by projects derived from this one. This plugin configuration will not be resolved or bound to the lifecycle unless referenced. Any local configuration for a given plugin will override the plugin's entire definition here.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="plugins" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The list of plugins to use.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="Plugin" name="plugin" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="Extension">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">Describes a build extension to utilise.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="groupId" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The group ID of the extension's artifact.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="artifactId" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The artifact ID of the extension.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="version" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">4.0.0+</xs:documentation>

<xs:documentation source="description">The version of the extension.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="License">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">Describes the licenses for this project. This is used to generate the license page of the project's web site, as well as being taken into consideration in other reporting and validation. The licenses listed for the project are that of the project itself, and not of dependencies.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="name" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The full legal name of the license.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="url" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The official url for the license text.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="distribution" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The primary method by which this project may be distributed. <dl> <dt>repo</dt> <dd>may be downloaded from the Maven repository</dd> <dt>manual</dt> <dd>user must manually download and install the dependency.</dd> </dl> </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="comments" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">Addendum information pertaining to this license.</xs:documentation>

</xs:annotation>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="MailingList">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">This element describes all of the mailing lists associated with a project. The auto-generated site references this information.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="name" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The name of the mailing list. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="subscribe" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The email address or link that can be used to subscribe to the mailing list. If this is an email address, a <code>mailto:</code> link will automatically be created when the documentation is created. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="unsubscribe" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The email address or link that can be used to unsubscribe to the mailing list. If this is an email address, a <code>mailto:</code> link will automatically be created when the documentation is created. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="post" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The email address or link that can be used to post to the mailing list. If this is an email address, a <code>mailto:</code> link will automatically be created when the documentation is created. </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="archive" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The link to a URL where you can browse the mailing list archive.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="otherArchives" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The link to alternate URLs where you can browse the list archive.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="xs:string" name="otherArchive" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>


<xs:complexType name="Developer">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">Information about one of the committers on this project.</xs:documentation>

</xs:annotation>


<xs:all>


<xs:element type="xs:string" name="id" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The unique ID of the developer in the SCM.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="name" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The full name of the contributor.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="email" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The email address of the contributor.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="url" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The URL for the homepage of the contributor.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="organization" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The organization to which the contributor belongs.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element type="xs:string" name="organizationUrl" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">The URL of the organization.</xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="roles" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The roles the contributor plays in the project. Each role is described by a <code>role</code> element, the body of which is a role name. This can also be used to describe the contribution. </xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:element type="xs:string" name="role" minOccurs="0" maxOccurs="unbounded"/>

</xs:sequence>

</xs:complexType>

</xs:element>


<xs:element type="xs:string" name="timezone" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description"> The timezone the contributor is in. Typically, this is a number in the range <a href="http://en.wikipedia.org/wiki/UTC%E2%88%9212:00">-12</a> to <a href="http://en.wikipedia.org/wiki/UTC%2B14:00">+14</a> or a valid time zone id like "America/Montreal" (UTC-05:00) or "Europe/Paris" (UTC+01:00). </xs:documentation>

</xs:annotation>

</xs:element>


<xs:element name="properties" minOccurs="0">


<xs:annotation>

<xs:documentation source="version">3.0.0+</xs:documentation>

<xs:documentation source="description">Properties about the contributor, such as an instant messenger handle.</xs:documentation>

</xs:annotation>


<xs:complexType>


<xs:sequence>

<xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>

</xs:sequence>

</xs:complexType>

</xs:element>

</xs:all>

</xs:complexType>
</schema>